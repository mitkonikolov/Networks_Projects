High Level Approach
	Development approach
I started by solving a smaller simpler version of the problem. I connected to
the server at the default port and tried to get the first status message.
I then wrote the code that performs the validation of the status message sent
by the server and created a loop that would continue until I receive a BYE
message. I then wrapped my socket and established a connection on the ssl port.
Once this was done, I wrote the argument parsing code.
	Code strucure
The code first takes in arguments making sure that they are the correct ones.
It then parses the arguments to find out where it needs to connect, how it
needs to connect and what student ID to send. After sending the initial message,
it starts an infinite loop that will solve mathematical problems and send the solution
to the server until it responds with an invalid message or with BYE.

Challenges
I would not say that I faced any challenges on this project.

Testing strategies
1. Because the code relies on information provided by the server, I mainly tested the
code by running it many times. I had it solve the mathematical problems provided by the
server many times to try and detect any errors that could have occured. This was also
the way I confirmed that I am able to establish an ssl connection
2. I tested the code by providing various combinations of command line arguments.
In this way I confirmed that the arguments that were intended to be required, actually
were so and that the code would run without the arguments that were optional. I also
tried providing non-sensical arguments that would break the program to confirm that the
arguments were indeed used as intended.
3. I also tested the code by calling some of the methods that were responsible for
handling only information provided by the server directly through the python code with
data that I would manually provide. In this way, I was able to confirm that operations,
rounding, analysizing server responses, etc. were performed correctly.
